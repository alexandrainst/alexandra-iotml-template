name: CI

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
    branches:
      - main

jobs:
  lint:
    if: github.event.pull_request.draft == false
    runs-on: {{'ubuntu-latest' if cookiecutter.open_source == 'y' else '[self-hosted, self-hosted-ubuntu-latest]'}}
    steps:
      - uses: actions/checkout@v4
      - uses: jpetrucciani/ruff-check@main

  pytest:
    if: github.event.pull_request.draft == false
    strategy:
        matrix:
            os: [{{'windows-latest, macos-latest, ubuntu-latest' if cookiecutter.open_source == 'y' else 'self-hosted-ubuntu-latest'}}]
            python-version: ["{{ cookiecutter.python_version }}"]
    runs-on: {% raw %}${{ matrix.os }}{% endraw %}
    steps:
      - uses: actions/checkout@v4
{{'\n      - name: Install Poetry\n        run: pipx install poetry==1.8.2\n\n' if cookiecutter.dependency_manager != 'pip'}}
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: {% raw %}${{ matrix.python-version }}{% endraw %}
          cache: {{'"poetry"' if cookiecutter.dependency_manager != 'pip' else 'pip'}}

      - name: Install Dependencies
        run: |
          {{'poetry env use ' if cookiecutter.dependency_manager != 'pip' else 'python'}}{% raw %}"${{ matrix.python-version }}"{% endraw %}{{'' if cookiecutter.dependency_manager != 'pip' else ' -m venv .venv'}}
          {{'poetry install' if cookiecutter.dependency_manager != 'pip' else '. .venv/bin/activate && pip install .[dev]'}}

      - name: Test with pytest
        run: {{'poetry run' if cookiecutter.dependency_manager != 'pip' else '. .venv/bin/activate && python -m'}} pytest
