name: website

# Build the documentation whenever there are new commits on main
on:
  push:
    branches:
      - main

# Security: restrict permissions for CI jobs.
permissions:
  contents: read

jobs:
  # Build the documentation and upload the static HTML files as an artifact.
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
{{'\n      - name: Install Poetry\n        run: pip3 install poetry==1.8.2\n' if cookiecutter.dependency_manager != 'pip' else ''}}
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "{{ cookiecutter.python_version }}"
          cache: {{'"poetry"' if cookiecutter.dependency_manager != 'pip' else 'pip'}}

      - name: Install Dependencies
        run: |
          {{'poetry env use ' if cookiecutter.dependency_manager != 'pip' else 'python'}}"{{ cookiecutter.python_version }}"{{'' if cookiecutter.dependency_manager != 'pip' else ' -m venv .venv'}}
          {{'poetry install --no-interaction --no-cache' if cookiecutter.dependency_manager != 'pip' else '. .venv/bin/activate && python -m pip install .[dev]'}}

      - name: Build documentation
        run: {{'poetry run' if cookiecutter.dependency_manager != 'pip' else '. .venv/bin/activate && python -m'}} pdoc --docformat google src/{{ cookiecutter.project_name }} -o docs

      - name: Compress documentation
        run: tar --directory docs/ -hcf artifact.tar .

      - name: Upload documentation
        uses: actions/upload-artifact@v4
        with:
          name: github-pages
          path: ./artifact.tar

  # Deploy the artifact to GitHub pages.
  # This is a separate job so that only actions/deploy-pages has the necessary permissions.
  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: {% raw %}${{ steps.deployment.outputs.page_url }}{% endraw %}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
