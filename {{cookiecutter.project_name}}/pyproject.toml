{{'[tool.poetry]' if cookiecutter.dependency_manager != 'pip' else '[project]'}}
name = "{{cookiecutter.project_name}}"
description = "{{cookiecutter.project_description}}"
version = "0.0.0"{{'\nauthors = [\n    "' if cookiecutter.dependency_manager != 'pip'}}{{cookiecutter.author_name if cookiecutter.dependency_manager != 'pip'}}{{' <' if cookiecutter.dependency_manager != 'pip'}}{{cookiecutter.email if cookiecutter.dependency_manager != 'pip'}}{{'>",\n]' if cookiecutter.dependency_manager != 'pip'}}
readme = "README.md"{{'\nlicense = ' if cookiecutter.dependency_manager != 'pip'}}{{'"MIT"' if cookiecutter.open_source == "y" and cookiecutter.dependency_manager != 'pip'}}{{'"Proprietary"' if cookiecutter.open_source != "y" and cookiecutter.dependency_manager != 'pip'}}{{'\n\n[tool.poetry.dependencies]' if cookiecutter.dependency_manager != 'pip'}}
{{'python' if cookiecutter.dependency_manager != 'pip' else 'requires-python'}} = ">={{ cookiecutter.python_version }},<3.13"{{'' if cookiecutter.dependency_manager != 'pip' else '\ndependencies = ['}}
{{'hydra-core = "^1.3.2"' if cookiecutter.dependency_manager != 'pip' else ' "hydra-core==1.3.2",\n]'}}{{'' if cookiecutter.dependency_manager != 'pip' else '\n[[project.authors]]\nname = "'}}{{cookiecutter.author_name if cookiecutter.dependency_manager == 'pip'}}{{'"\nemail = "' if cookiecutter.dependency_manager == 'pip'}}{{cookiecutter.email if cookiecutter.dependency_manager == 'pip'}}{{'"' if cookiecutter.dependency_manager == 'pip'}}

[build-system]
requires = [
    "{{'poetry-core>=1.0.0' if cookiecutter.dependency_manager != 'pip' else 'setuptools>=68.0.0'}}"
]
build-backend = "{{'poetry.core.masonry.api' if cookiecutter.dependency_manager != 'pip' else 'setuptools.build_meta'}}"
{{'\n[project.license]\nfile = "LICENSE"\n' if cookiecutter.dependency_manager == 'pip'}}
{{'[tool.poetry.group.dev.dependencies]' if cookiecutter.dependency_manager != 'pip' else '[project.optional-dependencies]\ndev = ['}}
{{'pytest = ">=8.1.1"'     if cookiecutter.dependency_manager != 'pip' else ' "pytest==8.1.1",'}}
{{'pytest-cov = ">=4.1.0"' if cookiecutter.dependency_manager != 'pip' else ' "pytest-cov==4.1.0",'}}
{{'pre-commit = ">=3.6.2"' if cookiecutter.dependency_manager != 'pip' else ' "pre-commit==3.6.2",'}}
{{'pdoc = ">=14.1.0"'      if cookiecutter.dependency_manager != 'pip' else ' "pdoc==14.1.0",'}}
{{'readme-coverage-badger = ">=0.1.2"' if cookiecutter.dependency_manager != 'pip' else ' "readme-coverage-badger==0.1.2",'}}
{{'click = ">=8.1.7"'      if cookiecutter.dependency_manager != 'pip' else ' "click==8.1.7",'}}
{{'ruff = ">=0.3.2"'       if cookiecutter.dependency_manager != 'pip' else ' "ruff==0.3.2",'}}
{{'mypy = ">=1.9.0"'       if cookiecutter.dependency_manager != 'pip' else ' "mypy==1.9.0",'}}
{{'nbstripout = ">=0.7.1"' if cookiecutter.dependency_manager != 'pip' else ' "nbstripout==0.7.1",'}}
{{''                       if cookiecutter.dependency_manager != 'pip' else ' "coverage[toml]==5.5",'}}
{{'[[tool.poetry.source]]\nname = "pypi" if cookiecutter.dependency_manager != 'pip' else ']'}}

[tool.ruff]
target-version = "{{'py312' if cookiecutter.python_version == '3.12'}}{{'py311' if cookiecutter.python_version == '3.11'}}{{'py310' if cookiecutter.python_version == '3.10'}}{{'py39' if cookiecutter.python_version == '3.9'}}{{'py38' if cookiecutter.python_version == '3.8'}}{{'py37' if cookiecutter.python_version == '3.7'}}"
line-length = 88
exclude = [
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true
skip-magic-trailing-comma = true

[tool.ruff.lint]
extend-select = [
    "I",
    "D",
]

[tool.ruff.lint.extend-per-file-ignores]
"__init__.py" = [
    "F401",
]
"src/scripts/your_script.py" = [
    "I",
]

[tool.ruff.lint.isort]
split-on-trailing-comma = false

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    '--verbose',
    '--durations=10',
    '--color=yes',
    '-s',
    '-vv',
    '--doctest-modules',
    '--cov=src/{{cookiecutter.project_name}}',
]
xfail_strict = true
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::ImportWarning",
]
log_cli_level = "info"
testpaths = [
    "tests",
    "src/{{cookiecutter.project_name}}",
]
